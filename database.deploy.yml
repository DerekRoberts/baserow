---
apiVersion: v1
kind: Template
parameters:
  - name: APP
    value: baserow
  - name: COMPONENT
    value: database
  - name: IMG_TAG
    value: "10"
  - description: Password for the PostgreSQL connection user.
    displayName: PostgreSQL Connection Password
    from: "[a-zA-Z0-9]{16}"
    generate: expression
    name: POSTGRESQL_PASSWORD
    required: true    
labels:
  app: ${APP}
  component: ${COMPONENT}
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      labels:
        app: ${APP}
      name: ${APP}-${COMPONENT}
    stringData:
      database-name: baserow
      database-password: "${POSTGRESQL_PASSWORD}"
      database-user: baserow
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: ${APP}
        component: ${COMPONENT}
        template: postgresql-persistent-template
      name: ${APP}-${COMPONENT}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 100Mi
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: ${APP}
        component: ${COMPONENT}
        template: postgresql-persistent-template
      name: ${APP}-${COMPONENT}
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${APP}
        component: ${COMPONENT}
      strategy:
        activeDeadlineSeconds: 21600
        recreateParams:
          timeoutSeconds: 600
        resources: {}
        type: Recreate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: ${APP}
            component: ${COMPONENT}
        spec:
          containers:
            - env:
                - name: POSTGRESQL_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${APP}-${COMPONENT}
                - name: POSTGRESQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${APP}-${COMPONENT}
                - name: POSTGRESQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${APP}-${COMPONENT}
              image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:10
              imagePullPolicy: IfNotPresent
              livenessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                    - --live
                failureThreshold: 3
                initialDelaySeconds: 120
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 10
              name: postgresql
              ports:
                - containerPort: 5432
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /usr/libexec/check-container
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              resources:
                limits:
                  memory: 512Mi
              securityContext:
                capabilities: {}
                privileged: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /var/lib/pgsql/data
                  name: ${APP}-${COMPONENT}
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: ${APP}-${COMPONENT}
              persistentVolumeClaim:
                claimName: ${APP}-${COMPONENT}
      test: false
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - postgresql
            from:
              kind: ImageStreamTag
              name: postgresql:${IMG_TAG}
              namespace: openshift
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP}
        component: ${COMPONENT}
      name: ${APP}-${COMPONENT}
    spec:
      ports:
        - name: "5432"
          port: 5432
      selector:
        app: ${APP}
        component: ${COMPONENT}
